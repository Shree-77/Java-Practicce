Classes & Interfaces
1. Develop an abstract class named Worker with private data members name and address along with
the getter and setter methods for the fields, a two-argument constructor and an abstract method called
earnings() to compute the income of a worker. Design another class named PieceWorker that should
contain private instance variables wage (to store the worker’s wage per piece) and pieces (to store the
number of pieces produced). Provide a concrete implementation of the method earnings in the class
PieceWorker that calculates the worker’s earnings by multiplying the number of pieces produced by the
wage per piece. Develop a class containing the main method to show the invocation of the earnings( )
method on a PieceWorker object.

2. Develop a class named Triangle that implements an interface called GeometricObject. The interface
GeometricObject has the abstract methods getArea() that computes and returns the area of a geometric
object and getPerimeter() that computes and returns the perimeter of a geometric object. The Triangle
class should have private double data fields named side1, side2, and side3 denoting the length of the
three sides of a triangle, a constructor that creates a triangle with the specified value for side1, side2
and side3, the getter and setter methods for all three data fields and an implementation of the getArea()
and getPerimeter() method. Develop a driver class to show the invocation of the getArea() and
getPerimeter() method on a Triangle object.

3. Develop an interface with two methods namely, withdraw money and deposit money. Develop a class
Account that implements the interface with necessary private data members such as current account
balance and account number. Develop another class CreditCardAccount that implements the interface
with necessary data members such as current credit limit and the credit card number. When money is
withdrawn from a credit card account; the credit limit is diminished by the amount of money withdrawn
and by an additional 0.5% of the amount of money withdrawn and when the money is deposited; the
credit limit is increased by the amount of money deposited. Develop a class containing the main method
and create an account object and a credit card account object and demonstrate the withdrawal and
deposit method on the objects.

4. Develop an interface with two methods namely, add and multiply for addition and multiplication of
mathematical objects such as vectors and matrices. Develop a class Vector that implements the
interface with necessary data members. Develop another class Matrix that implements the interface
with necessary data members. Develop a class containing the main method and show the computation
of the sum of two vectors and their scalar product and the sum of two matrices and the product of the
matrices.

5. Develop an interface with two methods for computing area and perimeter of a 2D shape. Develop a
class Circle that implements this interface with necessary data members. Develop another class
Rectangle that implements the interface with necessary data members. Develop a class containing the
main method and show the area and perimeter of a circle object with specified radius and center and
the area and perimeter of a rectangle object with specified dimensions.